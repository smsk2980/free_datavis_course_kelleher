(function (React, ReactDOM, d3) {
  'use strict';

  React = React && Object.prototype.hasOwnProperty.call(React, 'default') ? React['default'] : React;
  ReactDOM = ReactDOM && Object.prototype.hasOwnProperty.call(ReactDOM, 'default') ? ReactDOM['default'] : ReactDOM;

  //canvas
  const width = 960;
  const height = 500;

  //positions
  const centerX = width / 2;
  const centerY = height / 2;

  //offsets
  const eyeOffsetX = 120;
  const eyeOffsetY = 100;

  // Smiley
  const headStrokeWidth = 20;
  const eyeStrokeWidth = 20;
  const smileyFillColor = 'yellow';
  const eyeFillColor = 'white';
  const irisFillColor = 'green';
  const strokeColor = 'blue';
  const mouthWidth = 30;
  const mouthRadius = 140;

  //mouth

  const mouthArc = d3.arc()
    .innerRadius(mouthRadius)
    .outerRadius(mouthRadius + mouthWidth)
    .startAngle(Math.PI / (8 / 5))
    .endAngle((Math.PI * 7) / 5);

  //head

  const headArc = d3.arc()
    .innerRadius(0)
    .outerRadius((height / 2)-headStrokeWidth)
    .startAngle(0)
    .endAngle(Math.PI * 2);

  //eye

  const eyeArc = d3.arc()
    .innerRadius(0)
    .outerRadius(50)
    .startAngle(0)
    .endAngle(Math.PI * 2);

  const irisArc = d3.arc()
    .innerRadius(0)
    .outerRadius(10)
    .startAngle(0)
    .endAngle(Math.PI * 2);

  const App = () => (
    React.createElement( 'svg', { width: width, height: height },
      React.createElement( 'g', { transform: `translate(${centerX},${centerY})` },
        React.createElement( 'path', {
          d: headArc(), stroke: strokeColor, 'stroke-width': headStrokeWidth, fill: smileyFillColor }),
        React.createElement( 'path', { d: mouthArc(), fill: strokeColor })
      ), "//This is a group for the positioning of the left eye ", React.createElement( 'g', {
        transform: `translate(${centerX - eyeOffsetX},${
        centerY - eyeOffsetY
      })` },
        React.createElement( 'path', {
          d: eyeArc(), stroke: strokeColor, 'stroke-width': eyeStrokeWidth, fill: eyeFillColor }),
        React.createElement( 'path', { d: irisArc(), fill: irisFillColor })
      ), "//This is a group for the positioning of the right eye ", React.createElement( 'g', {
        transform: `translate(${centerX + eyeOffsetX},${
        centerY - eyeOffsetY
      })` },
        React.createElement( 'path', {
          d: eyeArc(), stroke: strokeColor, 'stroke-width': eyeStrokeWidth, fill: eyeFillColor }),

        React.createElement( 'path', { d: irisArc(), fill: irisFillColor })
      )
    )
  );

  const rootElement = document.getElementById('root');
  ReactDOM.render(React.createElement( App, null ), rootElement);

}(React, ReactDOM, d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCB7IGFyYyB9IGZyb20gJ2QzJztcblxuLy9jYW52YXNcbmNvbnN0IHdpZHRoID0gOTYwO1xuY29uc3QgaGVpZ2h0ID0gNTAwO1xuXG4vL3Bvc2l0aW9uc1xuY29uc3QgY2VudGVyWCA9IHdpZHRoIC8gMjtcbmNvbnN0IGNlbnRlclkgPSBoZWlnaHQgLyAyO1xuXG4vL29mZnNldHNcbmNvbnN0IGV5ZU9mZnNldFggPSAxMjA7XG5jb25zdCBleWVPZmZzZXRZID0gMTAwO1xuXG4vLyBTbWlsZXlcbmNvbnN0IGhlYWRTdHJva2VXaWR0aCA9IDIwO1xuY29uc3QgZXllU3Ryb2tlV2lkdGggPSAyMDtcbmNvbnN0IGV5ZVJhZGl1cyA9IDQwO1xuY29uc3Qgc21pbGV5RmlsbENvbG9yID0gJ3llbGxvdyc7XG5jb25zdCBleWVGaWxsQ29sb3IgPSAnd2hpdGUnO1xuY29uc3QgaXJpc0ZpbGxDb2xvciA9ICdncmVlbic7XG5jb25zdCBzdHJva2VDb2xvciA9ICdibHVlJztcbmNvbnN0IG1vdXRoV2lkdGggPSAzMDtcbmNvbnN0IG1vdXRoUmFkaXVzID0gMTQwO1xuXG4vL21vdXRoXG5cbmNvbnN0IG1vdXRoQXJjID0gYXJjKClcbiAgLmlubmVyUmFkaXVzKG1vdXRoUmFkaXVzKVxuICAub3V0ZXJSYWRpdXMobW91dGhSYWRpdXMgKyBtb3V0aFdpZHRoKVxuICAuc3RhcnRBbmdsZShNYXRoLlBJIC8gKDggLyA1KSlcbiAgLmVuZEFuZ2xlKChNYXRoLlBJICogNykgLyA1KTtcblxuLy9oZWFkXG5cbmNvbnN0IGhlYWRBcmMgPSBhcmMoKVxuICAuaW5uZXJSYWRpdXMoMClcbiAgLm91dGVyUmFkaXVzKChoZWlnaHQgLyAyKS1oZWFkU3Ryb2tlV2lkdGgpXG4gIC5zdGFydEFuZ2xlKDApXG4gIC5lbmRBbmdsZShNYXRoLlBJICogMik7XG5cbi8vZXllXG5cbmNvbnN0IGV5ZUFyYyA9IGFyYygpXG4gIC5pbm5lclJhZGl1cygwKVxuICAub3V0ZXJSYWRpdXMoNTApXG4gIC5zdGFydEFuZ2xlKDApXG4gIC5lbmRBbmdsZShNYXRoLlBJICogMik7XG5cbmNvbnN0IGlyaXNBcmMgPSBhcmMoKVxuICAuaW5uZXJSYWRpdXMoMClcbiAgLm91dGVyUmFkaXVzKDEwKVxuICAuc3RhcnRBbmdsZSgwKVxuICAuZW5kQW5nbGUoTWF0aC5QSSAqIDIpO1xuXG5jb25zdCBBcHAgPSAoKSA9PiAoXG4gIDxzdmcgd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0+XG4gICAgPGcgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7Y2VudGVyWH0sJHtjZW50ZXJZfSlgfT5cbiAgICAgIDxwYXRoXG4gICAgICAgIGQ9e2hlYWRBcmMoKX1cbiAgICAgICAgc3Ryb2tlPXtzdHJva2VDb2xvcn1cbiAgICAgICAgc3Ryb2tlLXdpZHRoPXtoZWFkU3Ryb2tlV2lkdGh9XG4gICAgICAgIGZpbGw9e3NtaWxleUZpbGxDb2xvcn1cbiAgICAgIC8+XG4gICAgICA8cGF0aCBkPXttb3V0aEFyYygpfSBmaWxsPXtzdHJva2VDb2xvcn0gLz5cbiAgICA8L2c+XG4gICAgLy9UaGlzIGlzIGEgZ3JvdXAgZm9yIHRoZSBwb3NpdGlvbmluZyBvZiB0aGUgbGVmdCBleWVcbiAgICA8Z1xuICAgICAgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7Y2VudGVyWCAtIGV5ZU9mZnNldFh9LCR7XG4gICAgICAgIGNlbnRlclkgLSBleWVPZmZzZXRZXG4gICAgICB9KWB9XG4gICAgPlxuICAgICAgPHBhdGhcbiAgICAgICAgZD17ZXllQXJjKCl9XG4gICAgICAgIHN0cm9rZT17c3Ryb2tlQ29sb3J9XG4gICAgICAgIHN0cm9rZS13aWR0aD17ZXllU3Ryb2tlV2lkdGh9XG4gICAgICAgIGZpbGw9e2V5ZUZpbGxDb2xvcn1cbiAgICAgIC8+XG4gICAgICA8cGF0aCBkPXtpcmlzQXJjKCl9IGZpbGw9e2lyaXNGaWxsQ29sb3J9IC8+XG4gICAgPC9nPlxuICAgIC8vVGhpcyBpcyBhIGdyb3VwIGZvciB0aGUgcG9zaXRpb25pbmcgb2YgdGhlIHJpZ2h0IGV5ZVxuICAgIDxnXG4gICAgICB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHtjZW50ZXJYICsgZXllT2Zmc2V0WH0sJHtcbiAgICAgICAgY2VudGVyWSAtIGV5ZU9mZnNldFlcbiAgICAgIH0pYH1cbiAgICA+XG4gICAgICA8cGF0aFxuICAgICAgICBkPXtleWVBcmMoKX1cbiAgICAgICAgc3Ryb2tlPXtzdHJva2VDb2xvcn1cbiAgICAgICAgc3Ryb2tlLXdpZHRoPXtleWVTdHJva2VXaWR0aH1cbiAgICAgICAgZmlsbD17ZXllRmlsbENvbG9yfVxuICAgICAgLz5cblxuICAgICAgPHBhdGggZD17aXJpc0FyYygpfSBmaWxsPXtpcmlzRmlsbENvbG9yfSAvPlxuICAgIDwvZz5cbiAgPC9zdmc+XG4pO1xuXG5jb25zdCByb290RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290Jyk7XG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgcm9vdEVsZW1lbnQpO1xuIl0sIm5hbWVzIjpbImFyYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0VBSUE7RUFDQSxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUM7RUFDbEIsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDO0FBQ25CO0VBQ0E7RUFDQSxNQUFNLE9BQU8sR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0VBQzFCLE1BQU0sT0FBTyxHQUFHLE1BQU0sR0FBRyxDQUFDLENBQUM7QUFDM0I7RUFDQTtFQUNBLE1BQU0sVUFBVSxHQUFHLEdBQUcsQ0FBQztFQUN2QixNQUFNLFVBQVUsR0FBRyxHQUFHLENBQUM7QUFDdkI7RUFDQTtFQUNBLE1BQU0sZUFBZSxHQUFHLEVBQUUsQ0FBQztFQUMzQixNQUFNLGNBQWMsR0FBRyxFQUFFLENBQUM7RUFF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